// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.5.1
// LVGL version: 8.3.11
// Project name: IAQ_Monitor_UI

#ifndef _IAQ_MONITOR_UI_UI_H
#define _IAQ_MONITOR_UI_UI_H

#ifdef __cplusplus
extern "C" {
#endif

#if defined __has_include
#if __has_include("lvgl.h")
#include "lvgl.h"
#elif __has_include("lvgl/lvgl.h")
#include "lvgl/lvgl.h"
#else
#include "lvgl.h"
#endif
#else
#include "lvgl.h"
#endif

#include "ui_helpers.h"
#include "ui_comp.h"
#include "ui_comp_hook.h"
#include "ui_events.h"
#include "ui_theme_manager.h"
#include "ui_themes.h"


// SCREEN: ui_MainScreen
void ui_MainScreen_screen_init(void);
extern lv_obj_t * ui_MainScreen;
extern lv_obj_t * ui_MainScreen_Container1;
extern lv_obj_t * ui_MainScreen_SensirionLogo;
extern lv_obj_t * ui_MainScreen_Label1;
extern lv_obj_t * ui_MainScreen_TilePM;
extern lv_obj_t * ui_MainScreen_TileCO2;
extern lv_obj_t * ui_MainScreen_TileVOC;
extern lv_obj_t * ui_MainScreen_TileNOx;
extern lv_obj_t * ui_MainScreen_TileT;
extern lv_obj_t * ui_MainScreen_TileRH;
// CUSTOM VARIABLES

// SCREEN: ui_PMScreen
void ui_PMScreen_screen_init(void);
extern lv_obj_t * ui_PMScreen;
extern lv_obj_t * ui_PMScreen_Panel1;
extern lv_obj_t * ui_PMScreen_PMValues;
extern lv_obj_t * ui_PMScreen_PM1;
extern lv_obj_t * ui_PMScreen_Pollutant;
extern lv_obj_t * ui_PMScreen_Value;
extern lv_obj_t * ui_PMScreen_PM25;
extern lv_obj_t * ui_PMScreen_Pollutant1;
extern lv_obj_t * ui_PMScreen_Value1;
extern lv_obj_t * ui_PMScreen_PM4;
extern lv_obj_t * ui_PMScreen_Pollutant2;
extern lv_obj_t * ui_PMScreen_Value2;
extern lv_obj_t * ui_PMScreen_PM10;
extern lv_obj_t * ui_PMScreen_Pollutant3;
extern lv_obj_t * ui_PMScreen_Value3;
extern lv_obj_t * ui_PMScreen_Unit;
extern lv_obj_t * ui_PMScreen_PMChart;
extern lv_obj_t * ui_PMScreen_XMinValue;
extern lv_obj_t * ui_PMScreen_XMaxValue;
extern lv_obj_t * ui_PMScreen_YMinValue;
extern lv_obj_t * ui_PMScreen_YMaxValue;
// CUSTOM VARIABLES

// SCREEN: ui_CO2Screen
void ui_CO2Screen_screen_init(void);
extern lv_obj_t * ui_CO2Screen;
extern lv_obj_t * ui_CO2Screen_Panel;
extern lv_obj_t * ui_CO2Screen_Container;
extern lv_obj_t * ui_CO2Screen_Title;
extern lv_obj_t * ui_CO2Screen_Symbol;
extern lv_obj_t * ui_CO2Screen_Pollutant;
extern lv_obj_t * ui_CO2Screen_Value;
extern lv_obj_t * ui_CO2Screen_Unit;
extern lv_obj_t * ui_CO2Screen_CO2Chart;
extern lv_obj_t * ui_CO2Screen_XMinValue;
extern lv_obj_t * ui_CO2Screen_XMaxValue;
extern lv_obj_t * ui_CO2Screen_YMinValue;
extern lv_obj_t * ui_CO2Screen_YMaxValue;
// CUSTOM VARIABLES

// SCREEN: ui_VOCScreen
void ui_VOCScreen_screen_init(void);
extern lv_obj_t * ui_VOCScreen;
extern lv_obj_t * ui_VOCScreen_Panel;
extern lv_obj_t * ui_VOCScreen_Container;
extern lv_obj_t * ui_VOCScreen_Title;
extern lv_obj_t * ui_VOCScreen_Symbol;
extern lv_obj_t * ui_VOCScreen_Pollutant;
extern lv_obj_t * ui_VOCScreen_Value;
extern lv_obj_t * ui_VOCScreen_Unit;
extern lv_obj_t * ui_VOCScreen_VOCChart;
extern lv_obj_t * ui_VOCScreen_XMinValue;
extern lv_obj_t * ui_VOCScreen_XMaxValue;
extern lv_obj_t * ui_VOCScreen_YMinValue;
extern lv_obj_t * ui_VOCScreen_YMaxValue;
// CUSTOM VARIABLES

// SCREEN: ui_NOxScreen
void ui_NOxScreen_screen_init(void);
extern lv_obj_t * ui_NOxScreen;
extern lv_obj_t * ui_NOxScreen_Panel;
extern lv_obj_t * ui_NOxScreen_Container;
extern lv_obj_t * ui_NOxScreen_Title;
extern lv_obj_t * ui_NOxScreen_Symbol;
extern lv_obj_t * ui_NOxScreen_Pollutant;
extern lv_obj_t * ui_NOxScreen_Value;
extern lv_obj_t * ui_NOxScreen_Unit;
extern lv_obj_t * ui_NOxScreen_NOxChart;
extern lv_obj_t * ui_NOxScreen_XMinValue;
extern lv_obj_t * ui_NOxScreen_XMaxValue;
extern lv_obj_t * ui_NOxScreen_YMinValue;
extern lv_obj_t * ui_NOxScreen_YMaxValue;
// CUSTOM VARIABLES

// SCREEN: ui_TempScreen
void ui_TempScreen_screen_init(void);
extern lv_obj_t * ui_TempScreen;
extern lv_obj_t * ui_TempScreen_Panel;
extern lv_obj_t * ui_TempScreen_Container;
extern lv_obj_t * ui_TempScreen_Title;
extern lv_obj_t * ui_TempScreen_Symbol;
extern lv_obj_t * ui_TempScreen_Pollutant;
extern lv_obj_t * ui_TempScreen_Value;
extern lv_obj_t * ui_TempScreen_Unit;
extern lv_obj_t * ui_TempScreen_TempChart;
extern lv_obj_t * ui_TempScreen_XMinValue;
extern lv_obj_t * ui_TempScreen_XMaxValue;
extern lv_obj_t * ui_TempScreen_YMinValue;
extern lv_obj_t * ui_TempScreen_YMaxValue;
// CUSTOM VARIABLES

// SCREEN: ui_RHScreen
void ui_RHScreen_screen_init(void);
extern lv_obj_t * ui_RHScreen;
extern lv_obj_t * ui_RHScreen_Panel;
extern lv_obj_t * ui_RHScreen_Container;
extern lv_obj_t * ui_RHScreen_Title;
extern lv_obj_t * ui_RHScreen_Symbol;
extern lv_obj_t * ui_RHScreen_Pollutant;
extern lv_obj_t * ui_RHScreen_Value;
extern lv_obj_t * ui_RHScreen_Unit;
extern lv_obj_t * ui_RHScreen_RHChart;
extern lv_obj_t * ui_RHScreen_XMinValue;
extern lv_obj_t * ui_RHScreen_XMaxValue;
extern lv_obj_t * ui_RHScreen_YMinValue;
extern lv_obj_t * ui_RHScreen_YMaxValue;
// CUSTOM VARIABLES

// SCREEN: ui_FRCScreen
void ui_FRCScreen_screen_init(void);
extern lv_obj_t * ui_FRCScreen;
extern lv_obj_t * ui_FRCScreen_Label2;
// CUSTOM VARIABLES

// EVENTS

extern lv_obj_t * ui____initial_actions0;

// IMAGES AND IMAGE SETS
LV_IMG_DECLARE(ui_img_sensirion_logo_rgb_green_small_png);    // assets/Sensirion_Logo_RGB_green_small.png
LV_IMG_DECLARE(ui_img_grip_png);    // assets/grip.png
LV_IMG_DECLARE(ui_img_wind_png);    // assets/wind.png
LV_IMG_DECLARE(ui_img_510121354);    // assets/flask-conical.png
LV_IMG_DECLARE(ui_img_741524973);    // assets/flame-kindling.png
LV_IMG_DECLARE(ui_img_thermometer_png);    // assets/thermometer.png
LV_IMG_DECLARE(ui_img_droplets_png);    // assets/droplets.png
LV_IMG_DECLARE(ui_img_wind_white_png);    // assets/wind_white.png
LV_IMG_DECLARE(ui_img_417669948);    // assets/flask-conical_white.png
LV_IMG_DECLARE(ui_img_238700877);    // assets/flame-kindling_white.png
LV_IMG_DECLARE(ui_img_thermometer_white_png);    // assets/thermometer_white.png
LV_IMG_DECLARE(ui_img_droplets_white_png);    // assets/droplets_white.png

// FONTS
LV_FONT_DECLARE(ui_font_Arial_Black_18);
LV_FONT_DECLARE(ui_font_Arial_Black_22);
LV_FONT_DECLARE(ui_font_Arial_Bold_13);

// UI INIT
void ui_init(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
